AWSTemplateFormatVersion: 2010-09-09
Description: 'SonarQube template'

Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: Instance
        Parameters:
          - InstanceSize
      - Label:
          default: Database
        Parameters:
          - DBTemplateURL
          - DBEngine
          - DBEngineVersion
          - DBInstanceClass
          - DBIops
          - DBMasterUserPassword
          - DBMultiAZ
          - DBPassword
          - DBStorage
          - DBStorageEncrypted
          - DBStorageType
          - ExportRDSBucket
      - Label:
          default: Networking
        Parameters:
          - CidrBlock
          - InternetFacingLoadBalancer
          - SSLCertificateARN
      - Label:
          default: AWS Quick Start configuration
        Parameters:
          - ExportPrefix

    ParameterLabels:
      InstanceSize:
        default: EC2 instance size
      CidrBlock:
        default: Permitted IP range
      DBTemplateURL:
        default: S3 bucket location for DB stack
      DBAcquireIncrement:
        default: DB Acquire Increment
      DBIdleTestPeriod:
        default: DB Idle Test Period
      DBEngine:
        default: Database engine
      DBEngineVersion:
        default: The database engine version to use
      DBInstanceClass:
        default: Database instance class
      DBIops:
        default: RDS Provisioned IOPS
      DBMasterUserPassword:
        default: Master (admin) password *
      DBMaxStatements:
        default: DB Max Statements
      DBMultiAZ:
        default: Enable RDS Multi-AZ deployment
      DBPassword:
        default: Application user database password *
      DBPoolMaxSize:
        default: DB Pool Maximum Size
      DBPoolMinSize:
        default: DB Pool Minimum Size
      DBPreferredTestQuery:
        default: DB Preferred Test Query
      DBStorage:
        default: Database storage
      DBStorageEncrypted:
        default: Database encryption
      DBStorageType:
        default: Database storage type
      DBTimeout:
        default: DB Timeout
      DBValidate:
        default: DB Validate
      InternetFacingLoadBalancer:
        default: Make instance internet facing
      SSLCertificateARN:
        default: SSL Certificate ARN
      ExportPrefix:
        default: MM identifier
      ExportRDSBucket:
        default: RDS Snapshot Export location

Parameters:
  ExportRDSBucket:
    Description: 'Location to store RDS snapshot exports'
    Type: String
  CidrBlock:
    AllowedPattern: '(\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})/(\d{1,2})'
    ConstraintDescription: Must be a valid IP CIDR range of the form x.x.x.x/x.
    Description: CIDR block allowed to access the Atlassian product. This should be set to a trusted IP range; if you want to give public access use '0.0.0.0/0'.
    MinLength: 9
    MaxLength: 18
    Type: String
  DBTemplateURL:
    Description: 'The S3 bucket location for the PostgreSQL Cloudformation stack'
    Type: String
  DBEngine:
    Default: 'Amazon Aurora PostgreSQL'
    Description: 'The database engine to use. The only one currently supported is Amazon Aurora PostgreSQL.'
    AllowedValues:
      - 'Amazon Aurora PostgreSQL'
    ConstraintDescription: Must be 'Amazon Aurora PostgreSQL'.
    Type: String
  DBEngineVersion:
    Default: 10
    AllowedValues:
      - 9
      - 10
    Description: "The database engine version to use; we'll install a suitable minor version for your chosen engine. Make sure that the SonarQube version you're installing supports the database engine selected."
    Type: String
  DBInstanceClass:
    Default: db.r4.large
    AllowedValues:
      - db.m5.large
      - db.m5.xlarge
      - db.m5.2xlarge
      - db.m5.4xlarge
      - db.m5.12xlarge
      - db.m5.24xlarge
      - db.m4.large
      - db.m4.xlarge
      - db.m4.2xlarge
      - db.m4.4xlarge
      - db.m4.10xlarge
      - db.m4.16xlarge
      - db.r5.large
      - db.r5.xlarge
      - db.r5.2xlarge
      - db.r5.4xlarge
      - db.r5.12xlarge
      - db.r5.24xlarge
      - db.r4.large
      - db.r4.xlarge
      - db.r4.2xlarge
      - db.r4.4xlarge
      - db.r4.8xlarge
      - db.r4.16xlarge
      - db.t3.medium
      - db.t3.large
      - db.t3.xlarge
      - db.t3.2xlarge
      - db.t2.medium
      - db.t2.large
      - db.t2.xlarge
      - db.t2.2xlarge
    ConstraintDescription: Must be a valid RDS instance class from the list.
    Description: RDS instance type (must be R4 family if using Amazon Aurora).
    Type: String
  DBIops:
    Default: 1000
    ConstraintDescription: Must be in the range 1000 - 30000.
    Description: 'Must be in the range of 1000 - 30000 and a multiple of 1000. This value is only used with Provisioned IOPS. Note: The ratio of IOPS per allocated-storage must be between 3.00 and 10.00. Not used for Amazon Aurora.'
    MinValue: 1000
    MaxValue: 30000
    Type: Number
  DBMasterUserPassword:
    AllowedPattern: >-
      ^(?=^.{8,255}$)(?=.*[a-z])(?=.*[A-Z])(?=.*\d)(?=.*[^A-Za-z0-9])(?!.*[@/"']).*$
    ConstraintDescription: >-
      Must be at least 8 characters and include 1 uppercase, 1 lowercase, 1 number, and 1 of the following symbols: ! # $ { * : [ = , ] - _ + % &
    Description: "Password for the master ('postgres') account. Must be at least 8 characters and include 1 uppercase, 1 lowercase, 1 number, and 1 of the following symbols: ! # $ { * : [ = , ] - _ + % &"
    MinLength: 8
    MaxLength: 128
    NoEcho: true
    Type: String
  DBMultiAZ:
    Description: When DBEngine is 'PostgreSQL', this will determine whether to provision a multi-AZ RDS instance. When DBEngine is 'Amazon Aurora PostgreSQL', this will determine whether to provision a single or a multiple-node Amazon Aurora cluster.
    Default: "true"
    AllowedValues:
      - "true"
      - "false"
    ConstraintDescription: Must be 'true' or 'false'.
    Type: String
  DBPassword:
    AllowedPattern: '(?=^.{6,255}$)((?=.*\\d)(?=.*[A-Z])(?=.*[a-z])|(?=.*\\d)(?=.*[^A-Za-z0-9])(?=.*[a-z])|(?=.*[^A-Za-z0-9])(?=.*[A-Z])(?=.*[a-z])|(?=.*\\d)(?=.*[A-Z])(?=.*[^A-Za-z0-9]))^.*'
    ConstraintDescription: 'Must be at least 8 characters and include 1 uppercase, 1 lowercase, 1 number, and 1 of the following symbols: ! # $ { * : [ = , ] - _ @ + % &'
    Description: "Database password used by SonarQube. Must be at least 8 characters and include 1 uppercase, 1 lowercase, 1 number, and 1 of the following symbols: ! # $ { * : [ = , ] - _ @ + % &"
    MinLength: 8
    MaxLength: 128
    NoEcho: true
    Type: String
  DBPoolMaxSize:
    Default: 60
    Description: The maximum number of database connections that can be opened at any time. 
    Type: Number
  DBPoolMinSize:
    Default: 20
    Description: The minimum number of idle database connections that are kept open at any time.
    Type: Number
  DBTimeout:
    Default: 30
    Description: Number of seconds that Connections in excess of minPoolSize should be permitted to remain idle in the pool before being culled.
    Type: Number
  DBIdleTestPeriod:
    Default: 100
    Description: If greater than 0, this is the frequency (in seconds) that c3po will test all idle, pooled but unchecked-out connections.
    Type: Number
  DBMaxStatements:
    Default: 0
    Description: "The size of c3p0's global PreparedStatement cache. It controls the total number of statements cached, for all connections. If set, it should be a fairly large number, as each pooled Connection requires its own, distinct flock of cached statements."
    Type: Number
  DBValidate:
    Default: "false"
    AllowedValues:
      - "true"
      - "false"
    Description: If true, a connection test will be performed at every connection checkout to verify that the connection is valid.
    Type: String
  DBPreferredTestQuery:
    Default: 'select version();'
    Description: The query that will be executed for all connection tests.
    Type: String
  DBAcquireIncrement:
    Default: 1
    Description: Determines how many connections at a time c3p0 will try to acquire when the pool is exhausted.
    Type: Number
  DBStorage:
    Default: 200
    Description: Database allocated storage size, in gigabytes (GB). If you choose Provisioned IOPS, storage should be between 100 and 6144. Not used for Amazon Aurora.
    Type: Number
  DBStorageEncrypted:
    Default: "true"
    AllowedValues:
      - "true"
      - "false"
    Description: Whether or not to encrypt the database.
    Type: String
  DBStorageType:
    Default: General Purpose (SSD)
    AllowedValues:
      - General Purpose (SSD)
      - Provisioned IOPS
    ConstraintDescription: Must be 'General Purpose (SSD)' or 'Provisioned IOPS'.
    Description: Database storage type. Not used for Amazon Aurora.
    Type: String
  InternetFacingLoadBalancer:
    Default: "true"
    AllowedValues: ["true", "false"]
    ConstraintDescription: Must be 'true' or 'false'.
    Description: Controls whether the load balancer should be visible to the internet (true) or only within the VPC (false).
    Type: String
  SSLCertificateARN:
    Default: ''
    Description: "Amazon Resource Name (ARN) of your SSL certificate. If you want to use your own certificate that you generated outside of Amazon, you need to first import it to AWS Certificate Manager. After a successful import, you'll receive the ARN. If you want to create a certificate with AWS Certificate Manager (ACM certificate), you will receive the ARN after it's successfully created."
    MinLength: 0
    MaxLength: 90
    Type: String
  ExportPrefix:
    Default: 'ATL-'
    Description:
        Identifier used in all variables exported from this deployment's Atlassian Standard Infrastructure (VPCID, SubnetIDs, KeyName). Use different 
    Type: String
  KeyPairName:
    ConstraintDescription: Must be the name of an existing EC2 Key Pair.
    Description: Public/private EC2 Key Pairs to allow you to securely access instance host
    Type: String
    Default: ''
  InstanceSize:
    Default: t3.medium
    AllowedValues:
      - c4.large
      - c4.xlarge
      - c4.2xlarge
      - c4.4xlarge
      - c4.8xlarge
      - c5.large
      - c5.xlarge
      - c5.2xlarge
      - c5.4xlarge
      - c5.9xlarge
      - c5.18xlarge
      - c5d.large
      - c5d.xlarge
      - c5d.2xlarge
      - c5d.4xlarge
      - c5d.9xlarge
      - c5d.18xlarge
      - d2.xlarge
      - d2.2xlarge
      - d2.4xlarge
      - d2.8xlarge
      - h1.2xlarge
      - h1.4xlarge
      - h1.8xlarge
      - h1.16xlarge
      - i3.large
      - i3.xlarge
      - i3.2xlarge
      - i3.4xlarge
      - i3.8xlarge
      - i3.16xlarge
      - i3.metal
      - m4.large
      - m4.xlarge
      - m4.2xlarge
      - m4.4xlarge
      - m4.10xlarge
      - m4.16xlarge
      - m5.large
      - m5.xlarge
      - m5.2xlarge
      - m5.4xlarge
      - m5.12xlarge
      - m5.24xlarge
      - m5d.large
      - m5d.xlarge
      - m5d.2xlarge
      - m5d.4xlarge
      - m5d.12xlarge
      - m5d.24xlarge
      - r4.large
      - r4.xlarge
      - r4.2xlarge
      - r4.4xlarge
      - r4.8xlarge
      - r4.16xlarge
      - r5.large
      - r5.xlarge
      - r5.2xlarge
      - r5.4xlarge
      - r5.12xlarge
      - r5.24xlarge
      - r5d.large
      - r5d.xlarge
      - r5d.2xlarge
      - r5d.4xlarge
      - r5d.12xlarge
      - r5d.24xlarge
      - t2.medium
      - t2.large
      - t2.xlarge
      - t2.2xlarge
      - t3.medium
      - t3.large
      - t3.xlarge
      - t3.2xlarge
      - x1.16xlarge
      - x1.32xlarge
      - x1e.xlarge
      - x1e.2xlarge
      - x1e.4xlarge
      - x1e.8xlarge
      - x1e.16xlarge
      - x1e.32xlarge
      - z1d.large
      - z1d.xlarge
      - z1d.2xlarge
      - z1d.3xlarge
      - z1d.6xlarge
      - z1d.12xlarge
    ConstraintDescription: Must be an EC2 instance type from the selection list
    Description: Sonarqube node instance type.
    Type: String

Conditions:
  KeyProvided:
    !Not [!Equals [!Ref KeyPairName, '']]
  DoSSL:
    !Not [!Equals [!Ref SSLCertificateARN, '']]
  UsePublicIp:
    !Equals [!Ref InternetFacingLoadBalancer, 'true']
  DBEngineAurora:
    !Equals [!Ref DBEngine, "Amazon Aurora PostgreSQL"]
  DBEnginePostgres:
    !Equals [!Ref DBEngine, "PostgreSQL"]

Mappings:
  SemanticDBVersions:
    PostgreSQL:
      "9": "9.6"
      "10": "10"
      "11": "11"
    AuroraPostgreSQL:
      "9": "9.6.12"
      "10": "10.7"
      "11": "11.4"
  AWSInstanceType2Arch:
    c4.large:
      Arch: HVM64
      Jvmheap: 2304m
    c4.xlarge:
      Arch: HVM64
      Jvmheap: 4608m
    c4.2xlarge:
      Arch: HVM64
      Jvmheap: 12288m
    c4.4xlarge:
      Arch: HVM64
      Jvmheap: 12288m
    c4.8xlarge:
      Arch: HVM64
      Jvmheap: 12288m
    c5.large:
      Arch: HVM64
      Jvmheap: 2048m
    c5.xlarge:
      Arch: HVM64
      Jvmheap: 5120m
    c5.2xlarge:
      Arch: HVM64
      Jvmheap: 12288m
    c5.4xlarge:
      Arch: HVM64
      Jvmheap: 12288m
    c5.9xlarge:
      Arch: HVM64
      Jvmheap: 12288m
    c5.18xlarge:
      Arch: HVM64
      Jvmheap: 12288m
    c5d.large:
      Arch: HVM64
      Jvmheap: 2048m
    c5d.xlarge:
      Arch: HVM64
      Jvmheap: 5120m
    c5d.2xlarge:
      Arch: HVM64
      Jvmheap: 12288m
    c5d.4xlarge:
      Arch: HVM64
      Jvmheap: 12288m
    c5d.9xlarge:
      Arch: HVM64
      Jvmheap: 12288m
    c5d.18xlarge:
      Arch: HVM64
      Jvmheap: 12288m
    d2.xlarge:
      Arch: HVM64
      Jvmheap: 12288m
    d2.2xlarge:
      Arch: HVM64
      Jvmheap: 12288m
    d2.4xlarge:
      Arch: HVM64
      Jvmheap: 12288m
    d2.8xlarge:
      Arch: HVM64
      Jvmheap: 12288m
    h1.2xlarge:
      Arch: HVM64
      Jvmheap: 12288m
    h1.4xlarge:
      Arch: HVM64
      Jvmheap: 12288m
    h1.8xlarge:
      Arch: HVM64
      Jvmheap: 12288m
    h1.16xlarge:
      Arch: HVM64
      Jvmheap: 12288m
    i3.large:
      Arch: HVM64
      Jvmheap: 12288m
    i3.xlarge:
      Arch: HVM64
      Jvmheap: 12288m
    i3.2xlarge:
      Arch: HVM64
      Jvmheap: 12288m
    i3.4xlarge:
      Arch: HVM64
      Jvmheap: 12288m
    i3.8xlarge:
      Arch: HVM64
      Jvmheap: 12288m
    i3.16xlarge:
      Arch: HVM64
      Jvmheap: 12288m
    i3.metal:
      Arch: HVM64
      Jvmheap: 12288m
    m4.large:
      Arch: HVM64
      Jvmheap: 5120m
    m4.xlarge:
      Arch: HVM64
      Jvmheap: 12288m
    m4.2xlarge:
      Arch: HVM64
      Jvmheap: 12288m
    m4.4xlarge:
      Arch: HVM64
      Jvmheap: 12288m
    m4.10xlarge:
      Arch: HVM64
      Jvmheap: 12288m
    m4.16xlarge:
      Arch: HVM64
      Jvmheap: 12288m
    m5.large:
      Arch: HVM64
      Jvmheap: 5120m
    m5.xlarge:
      Arch: HVM64
      Jvmheap: 12288m
    m5.2xlarge:
      Arch: HVM64
      Jvmheap: 12288m
    m5.4xlarge:
      Arch: HVM64
      Jvmheap: 12288m
    m5.12xlarge:
      Arch: HVM64
      Jvmheap: 12288m
    m5.24xlarge:
      Arch: HVM64
      Jvmheap: 12288m
    m5d.large:
      Arch: HVM64
      Jvmheap: 5120m
    m5d.xlarge:
      Arch: HVM64
      Jvmheap: 12288m
    m5d.2xlarge:
      Arch: HVM64
      Jvmheap: 12288m
    m5d.4xlarge:
      Arch: HVM64
      Jvmheap: 12288m
    m5d.12xlarge:
      Arch: HVM64
      Jvmheap: 12288m
    m5d.24xlarge:
      Arch: HVM64
      Jvmheap: 12288m
    r4.large:
      Arch: HVM64
      Jvmheap: 12288m
    r4.xlarge:
      Arch: HVM64
      Jvmheap: 12288m
    r4.2xlarge:
      Arch: HVM64
      Jvmheap: 12288m
    r4.4xlarge:
      Arch: HVM64
      Jvmheap: 12288m
    r4.8xlarge:
      Arch: HVM64
      Jvmheap: 12288m
    r4.16xlarge:
      Arch: HVM64
      Jvmheap: 12288m
    r5.large:
      Arch: HVM64
      Jvmheap: 12288m
    r5.xlarge:
      Arch: HVM64
      Jvmheap: 12288m
    r5.2xlarge:
      Arch: HVM64
      Jvmheap: 12288m
    r5.4xlarge:
      Arch: HVM64
      Jvmheap: 12288m
    r5.12xlarge:
      Arch: HVM64
      Jvmheap: 12288m
    r5.24xlarge:
      Arch: HVM64
      Jvmheap: 12288m
    r5d.large:
      Arch: HVM64
      Jvmheap: 12288m
    r5d.xlarge:
      Arch: HVM64
      Jvmheap: 12288m
    r5d.2xlarge:
      Arch: HVM64
      Jvmheap: 12288m
    r5d.4xlarge:
      Arch: HVM64
      Jvmheap: 12288m
    r5d.12xlarge:
      Arch: HVM64
      Jvmheap: 12288m
    r5d.24xlarge:
      Arch: HVM64
      Jvmheap: 12288m
    t2.medium:
      Arch: HVM64
      Jvmheap: 2048m
    t2.large:
      Arch: HVM64
      Jvmheap: 5120m
    t2.xlarge:
      Arch: HVM64
      Jvmheap: 12288m
    t2.2xlarge:
      Arch: HVM64
      Jvmheap: 12288m
    t3.medium:
      Arch: HVM64
      Jvmheap: 2048m
    t3.large:
      Arch: HVM64
      Jvmheap: 5120m
    t3.xlarge:
      Arch: HVM64
      Jvmheap: 12288m
    t3.2xlarge:
      Arch: HVM64
      Jvmheap: 12288m
    x1.16xlarge:
      Arch: HVM64
      Jvmheap: 12288m
    x1.32xlarge:
      Arch: HVM64
      Jvmheap: 12288m
    x1e.xlarge:
      Arch: HVM64
      Jvmheap: 12288m
    x1e.2xlarge:
      Arch: HVM64
      Jvmheap: 12288m
    x1e.4xlarge:
      Arch: HVM64
      Jvmheap: 12288m
    x1e.8xlarge:
      Arch: HVM64
      Jvmheap: 12288m
    x1e.16xlarge:
      Arch: HVM64
      Jvmheap: 12288m
    x1e.32xlarge:
      Arch: HVM64
      Jvmheap: 12288m
    z1d.large:
      Arch: HVM64
      Jvmheap: 12288m
    z1d.xlarge:
      Arch: HVM64
      Jvmheap: 12288m
    z1d.2xlarge:
      Arch: HVM64
      Jvmheap: 12288m
    z1d.3xlarge:
      Arch: HVM64
      Jvmheap: 12288m
    z1d.6xlarge:
      Arch: HVM64
      Jvmheap: 12288m
    z1d.12xlarge:
      Arch: HVM64
      Jvmheap: 12288m

  AWSRegionArch2AMI:
    ap-northeast-1:
      HVM64: ami-00d101850e971728d
    ap-northeast-2:
      HVM64: ami-08ab3f7e72215fe91
    ap-south-1:
      HVM64: ami-00e782930f1c3dbc7
    ap-southeast-1:
      HVM64: ami-0b5a47f8865280111
    ap-southeast-2:
      HVM64: ami-0fb7513bcdc525c3b
    ca-central-1:
      HVM64: ami-08a9b721ecc5b0a53
    eu-central-1:
      HVM64: ami-0ebe657bc328d4e82
    eu-north-1:
      HVM64: ami-1fb13961
    eu-west-1:
      HVM64: ami-030dbca661d402413
    eu-west-2:
      HVM64: ami-0009a33f033d8b7b6
    eu-west-3:
      HVM64: ami-0ebb3a801d5fb8b9b
    sa-east-1:
      HVM64: ami-058141e091292ecf0
    us-east-1:
      HVM64: ami-0c6b1d09930fac512
    us-east-2:
      HVM64: ami-0ebbf2179e615c338
    us-west-1:
      HVM64: ami-015954d5e5548d13b
    us-west-2:
      HVM64: ami-0cb72367e98845d43
    us-gov-west-1:
      HVM64: ami-e9a9d388
    us-gov-east-1:
      HVM64: ami-a2d938d3


Resources:
  SonarSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Security group allowing HTTP/HTTPS access
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: !Ref CidrBlock
        - IpProtocol: tcp
          FromPort: 443
          ToPort: 443
          CidrIp: !Ref CidrBlock
      Tags:
        - Key: Name
          Value: !Join [' ', [!Ref "AWS::StackName", 'sg']]
      VpcId:
        Fn::ImportValue: !Sub "${ExportPrefix}VPCID"

  # Instance
  SonarQubeNodeInstanceProfile:
      Type: AWS::IAM::InstanceProfile
      Properties:
        Path: /
        Roles: [!Ref SonarQubeNodeRole]

  SonarQubeNodeRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service: [ec2.amazonaws.com]
            Action: ['sts:AssumeRole']
      ManagedPolicyArns:
        - !Sub "arn:${AWS::Partition}:iam::aws:policy/AmazonSSMManagedInstanceCore"
        - !Sub "arn:${AWS::Partition}:iam::aws:policy/CloudWatchAgentServerPolicy"
      Path: /
      Policies:
        - PolicyName: SonarQubeNodePolicy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Action:
                  - 'ec2:CreateTags'
                  - 'ec2:DescribeInstances'
                  - 'ec2:DescribeTags'
                  - 'route53:ListHostedZones'
                  - 'route53:ListResourceRecordSet'
                  - 'iam:PassRole'
                Effect: Allow
                Resource: ['*']
              - Action:
                  - "route53:ChangeResourceRecordSets"
                Effect: Allow
                Resource:
                  - !Sub "arn:${AWS::Partition}:route53:::healthcheck/*"
                  - !Sub "arn:${AWS::Partition}:route53:::change/*"
                  - !Sub "arn:${AWS::Partition}:route53:::hostedzone/*"
                  - !Sub "arn:${AWS::Partition}:route53:::delegationset/*"
              - Action: ['kms:*']
                Effect: Allow
                Resource: ['*']

  SonarQubeNode:
    Type: AWS::EC2::Instance
    Properties:
      IamInstanceProfile: !Ref SonarQubeNodeInstanceProfile
      AvailabilityZone: us-east-2a
      SubnetId: !Select
      - 0
      - !Split
        - ","
        - Fn::ImportValue: !Sub "${ExportPrefix}PriNets"
      ImageId:
        !FindInMap
          - AWSRegionArch2AMI
          - !Ref AWS::Region
          - !FindInMap
              - AWSInstanceType2Arch
              - !Ref InstanceSize
              - Arch
      InstanceType: !Ref InstanceSize
      KeyName: !If
        - KeyProvided
        - !Ref KeyPairName
        - Ref: AWS::NoValue
      Tags:
          - Key: Name
            Value: !Join [' ', [!Ref "AWS::StackName", 'Node']]
      SecurityGroupIds : 
          - !GetAtt "SecurityGroup.GroupId"
      UserData:
        Fn::Base64: 
          !Sub |
            #!/bin/bash -ex
            yum update -y
            wget https://binaries.sonarsource.com/CommercialDistribution/sonarqube-developer/sonarqube-developer-7.9.5.zip
            yum install -y java-11
            mkdir /sonarqube
            mkfs -t xfs /dev/nvme1n1
            echo "/dev/nvme1n1       /sonarqube   xfs    defaults,nofail 0       2" >> /etc/fstab
            mount /dev/nvme1n1 /sonarqube
            unzip sonarqube-developer-7.9.5.zip -d /opt
            useradd --system --user-group sonarqube
            chown -R sonarqube:sonarqube /opt/sonarqube-7.9.5
            chown -R sonarqube:sonarqube /sonarqube
            chmod -R g+w /opt/sonarqube-7.9.5
            chmod -R g+w /sonarqube
            echo sonar.jdbc.username=sonarqubemaster >> /opt/sonarqube-7.9.5/conf/sonar.properties
            echo sonar.jdbc.password=${DBPassword}  >> /opt/sonarqube-7.9.5/conf/sonar.properties
            echo sonar.jdbc.url=jdbc:postgresql://${DB.Outputs.RDSEndPoints}  >> /opt/sonarqube-7.9.5/conf/sonar.properties
            echo sonar.path.data=/sonarqube/data >> /opt/sonarqube-7.9.5/conf/sonar.properties
            echo sonar.path.temp=/sonarqube/temp >> /opt/sonarqube-7.9.5/conf/sonar.properties
            echo vm.max_map_count=262144 >> /etc/sysctl.d/99-sysctl.conf
            sysctl -w vm.max_map_count=262144
            sudo cat > /etc/systemd/system/sonarqube.service  <<EOF
            [Unit]
            Description=SonarQube service
            After=syslog.target network.target

            [Service]
            Type=simple
            User=sonarqube
            Group=sonarqube
            PermissionsStartOnly=true
            ExecStart=/usr/bin/nohup /usr/bin/java -Xms32m -Xmx32m -Djava.net.preferIPv4Stack=true -jar /opt/sonarqube-7.9.5/lib/sonar-application-7.9.5.jar
            StandardOutput=syslog
            LimitNOFILE=131072
            LimitNPROC=8192
            TimeoutStartSec=5
            Restart=always
            SuccessExitStatus=143

            [Install]
            WantedBy=multi-user.target
            EOF
            chmod 664 /etc/systemd/system/sonarqube.service
            systemctl daemon-reload
            systemctl enable sonarqube
            systemctl start sonarqube
  
  ElasticSearchVolume:
    Type: AWS::EC2::Volume
    Properties:
      Size: 100
      AvailabilityZone: !GetAtt SonarQubeNode.AvailabilityZone
      Tags:
          - Key: Name
            Value: !Join [' ', [!Ref "AWS::StackName", 'Volume']]
    DeletionPolicy: Snapshot

  ElasticSearchVolumeMountPoint:
    Type: AWS::EC2::VolumeAttachment
    Properties:
      InstanceId: !Ref SonarQubeNode
      VolumeId: !Ref ElasticSearchVolume
      Device: /dev/sdh

  # Database
  DB:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Ref DBTemplateURL
      Parameters:
        CustomDBSecurityGroup: !Ref SecurityGroup
        DBAllocatedStorageEncrypted: !Ref DBStorageEncrypted
        DBBackupRetentionPeriod: "1"
        DBEngineVersion: !FindInMap [SemanticDBVersions, AuroraPostgreSQL, !Ref DBEngineVersion]
        DBInstanceClass: !Ref DBInstanceClass
        DBMasterUsername: sonarqubemaster
        DBMasterUserPassword: !Ref DBMasterUserPassword
        DBMultiAZ: !Ref DBMultiAZ
        DBName: 'sonarqubedb'
        DBPort: '5432'
        EnableEventSubscription: 'false'
        Subnet1ID: !Select
          - 0
          - !Split
            - ","
            - Fn::ImportValue: !Sub "${ExportPrefix}PriNets"
        Subnet2ID: !Select
          - 1
          - !Split
            - ","
            - Fn::ImportValue: !Sub "${ExportPrefix}PriNets"
        VPCID:
          Fn::ImportValue: !Sub "${ExportPrefix}VPCID"
  
  #Loadbalancer
  LoadBalancer:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      LoadBalancerAttributes:
        - Key: idle_timeout.timeout_seconds
          Value: '300'
      Scheme: !If [UsePublicIp, 'internet-facing', 'internal']
      SecurityGroups: [!Ref SecurityGroup]
      Subnets: !Split
        - ","
        - Fn::ImportValue: !Sub "${ExportPrefix}PubNets"
      Tags:
        - Key: Name
          Value: !Sub ["${StackName}-LoadBalancer", StackName: !Ref 'AWS::StackName']
        - Key: Cluster
          Value: !Ref AWS::StackName

  LoadBalancerHTTPListener:
      Type: AWS::ElasticLoadBalancingV2::Listener
      Properties:
        DefaultActions:
          - !If
            - DoSSL
            - Type: redirect
              RedirectConfig:
                Protocol: HTTPS
                Port: '443'
                Host: '#{host}'
                Path: '/#{path}'
                Query: '#{query}'
                StatusCode: HTTP_301
            - Type: forward
              TargetGroupArn: !Ref MainTargetGroup
        LoadBalancerArn: !Ref LoadBalancer
        Port: 80
        Protocol: HTTP
  LoadBalancerHTTPSListener:
    Condition: DoSSL
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      Certificates:
        - CertificateArn: !Ref SSLCertificateARN
      DefaultActions:
        - Type: forward
          TargetGroupArn: !Ref MainTargetGroup
      LoadBalancerArn: !Ref LoadBalancer
      Port: 443
      Protocol: HTTPS
  
  MainTargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      Port: 9000
      Protocol: HTTP
      VpcId:
        Fn::ImportValue: !Sub "${ExportPrefix}VPCID"
      HealthCheckIntervalSeconds: 20
      HealthCheckTimeoutSeconds: 10
      HealthyThresholdCount: 2
      Matcher:
        HttpCode: '200'
      HealthCheckPath: '/about'
      HealthCheckPort: 9000
      HealthCheckProtocol: HTTP
      TargetGroupAttributes:
        - Key: stickiness.enabled
          Value: 'false'
      Targets: 
        - Id: !Ref SonarQubeNode
          Port: 9000
      TargetType: instance
      Tags:
        - Key: Name
          Value: MainTargetGroup
        - Key: Cluster
          Value: !Ref AWS::StackName
    DependsOn:
      - LoadBalancer

  SecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Security group allowing HTTP/HTTPS access
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: !Ref CidrBlock
        - IpProtocol: tcp
          FromPort: 443
          ToPort: 443
          CidrIp: !Ref CidrBlock
      Tags:
        - Key: Name
          Value: !Join [' ', [!Ref "AWS::StackName", 'sg']]
      VpcId:
        Fn::ImportValue: !Sub "${ExportPrefix}VPCID"
  SecurityGroupIngress9000:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      GroupId: !Ref SecurityGroup
      IpProtocol: tcp
      FromPort: 9000
      ToPort: 9000
      SourceSecurityGroupId: !Ref SecurityGroup
  SecurityGroupIngress5432:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      GroupId: !Ref SecurityGroup
      IpProtocol: tcp
      FromPort: 5432
      ToPort: 5432
      SourceSecurityGroupId: !Ref SecurityGroup

Outputs:
  InstanceId:
    Description: InstanceId of the newly created EC2 instance
    Value: !Ref SonarQubeNode
    Export:
      Name: !Join [ ":", [ !Ref "AWS::StackName", InstanceId ] ]
  LoadBalancerURL:
    Description: The Load Balancer URL
    Value: !Sub
      - "${HTTP}://${LoadBalancerDNSName}"
      - HTTP: !If [DoSSL, 'https', 'http']
        LoadBalancerDNSName: !GetAtt LoadBalancer.DNSName
  SGname:
    Description: The name of the SecurityGroup
    Value: !Ref SecurityGroup
    Export: {
      Name: !Join ['', [!Ref 'AWS::StackName', '-SGname']]
      }
  DBEndpointAddress:
    Description: The Database Connection String
    Value: !GetAtt DB.Outputs.RDSEndPointAddress